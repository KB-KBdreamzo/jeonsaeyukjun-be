plugins {
  id 'java'
  id 'war'
  id 'application'
}
application {
  mainClass = 'com.jeonsaeyukjun.jeonsaeyukjunbe.report.crawling.AddHighTaxCompare'
}

group 'com.jeonsaeyukjun'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.9.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}
task runAddHighTaxCompare(type: JavaExec) {
  mainClass = 'com.jeonsaeyukjun.jeonsaeyukjunbe.report.crawling.AddHighTaxCompare'  // mainClass 경로 수정
  classpath = sourceSets.main.runtimeClasspath
}

dependencies {
  compileOnly('javax.servlet:javax.servlet-api:4.0.1')
  //log4j
  implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
  implementation 'org.apache.logging.log4j:log4j-core:2.19.0'

  // MySQL JDBC driver
  implementation 'mysql:mysql-connector-java:8.0.33'

  // Jackson for JSON parsing
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'
  implementation 'com.fasterxml.jackson.core:jackson-core:2.17.2'

  // 테스트 프레임ㅉ워크 (필요 시 추가)
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

  implementation ("org.springframework:spring-context:5.3.37")
          { exclude group: 'commons-logging', module: 'commons-logging' }
  implementation "org.springframework:spring-webmvc:5.3.37"
  implementation 'javax.inject:javax.inject:1'

  //el과 jstl사용시 필요한 모듈 [필요없다면 삭제]
  compileOnly 'javax.servlet.jsp:jsp-api:2.1'
  implementation 'javax.servlet:jstl:1.2'

  //로깅을 위해 logback & slf4j -> 바꿔도 됨
  implementation 'ch.qos.logback:logback-classic:1.4.1'
  implementation 'org.slf4j:slf4j-api:2.0.3'

  // xml내 한글 처리
  implementation 'xerces:xercesImpl:2.12.2'

  //lombok
  compileOnly 'org.projectlombok:lombok:1.18.28'
  annotationProcessor 'org.projectlombok:lombok:1.18.28'

  //Restful api 서버 구축에 필요한 라이브러리 -> 자바 객체 json 변환
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.2'
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.2'

  //mybatis & mysql
  implementation 'org.springframework:spring-jdbc:5.3.37'
  implementation 'org.mybatis:mybatis:3.5.10'
  implementation 'org.mybatis:mybatis-spring:2.0.7'
  runtimeOnly 'mysql:mysql-connector-java:8.0.26'

  //DBconnection pool -- 디비를 연결했다가 읽고 쓰고 연결끊고
  implementation group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.12.0'
  // 히카리 -> 자바 11부터 지원
  implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.1.0'

  // Junit
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

  // AOP
  implementation 'org.aspectj:aspectjrt:1.9.20'
  implementation 'org.aspectj:aspectjweaver:1.9.20'

  // Selenium Java 라이브러리
  implementation 'org.seleniumhq.selenium:selenium-java:4.18.0'

  // WebDriver Manager (브라우저 드라이버 자동 관리)
  implementation 'io.github.bonigarcia:webdrivermanager:5.3.2'

  // 테스트를 위한 JUnit (선택 사항)
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

  // 텍스트 추출
  implementation 'org.apache.pdfbox:pdfbox:2.0.24'
  implementation 'commons-fileupload:commons-fileupload:1.4'

  // 부동산 시세 조회
  implementation 'org.json:json:20210307'
}

test {
useJUnitPlatform()}